{"ast":null,"code":"var _jsxFileName = \"/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport flight_data from '../datasets/2020-06-17-TYO.json';\nimport storageRef, { db } from './firebase';\nimport '../pages/pricechart';\nvar date_arr = [];\nvar price_arr = [];\ndb.collection('flight_price_KUL').doc(\"2020-06-21\").collection('2020-05-22').get().then(querySnapshot => {\n  querySnapshot.forEach(doc => {\n    // Gets the name of the document and the price of the flight\n    console.log(`${doc.id} => ${doc.get(\"Price\")}`);\n  });\n});\n\nfor (var x = 0; x < 14; x++) {}\n\nfor (var x = 0; x < 14; x++) {\n  const {\n    Date,\n    Price\n  } = flight_data[x];\n  date_arr[x] = Date;\n  price_arr[x] = Price;\n}\n\nvar price_int_arr = price_arr.map(x => parseInt(x.slice(1)));\nconst state = {\n  labels: date_arr,\n  datasets: [{\n    label: '$SGD',\n    fill: false,\n    lineTension: 0,\n    backgroundColor: 'rgba(75,192,192,1)',\n    borderColor: 'rgba(0,0,0,1)',\n    borderWidth: 5,\n    data: price_int_arr\n  }]\n};\n\nclass Chart extends React.Component {\n  render() {\n    console.log(this.props.name);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: state,\n      options: {\n        title: {\n          display: true,\n          text: \"Flight prices to \" + this.props.name,\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chart.jsx"],"names":["React","Line","flight_data","storageRef","db","date_arr","price_arr","collection","doc","get","then","querySnapshot","forEach","console","log","id","x","Date","Price","price_int_arr","map","parseInt","slice","state","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","Chart","Component","render","props","name","title","display","text","fontSize","legend","position"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,UAAP,IAAoBC,EAApB,QAA8B,YAA9B;AACA,OAAO,qBAAP;AAEA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,SAAS,GAAG,EAAhB;AAEAF,EAAE,CAACG,UAAH,CAAc,kBAAd,EAAkCC,GAAlC,CAAsC,YAAtC,EACCD,UADD,CACY,YADZ,EAC0BE,GAD1B,GACgCC,IADhC,CACsCC,aAAD,IAAmB;AACtDA,EAAAA,aAAa,CAACC,OAAd,CAAuBJ,GAAD,IAAS;AAC7B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEN,GAAG,CAACO,EAAG,OAAMP,GAAG,CAACC,GAAJ,CAAQ,OAAR,CAAiB,EAA7C;AACD,GAHD;AAID,CAND;;AAQA,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B,CAE5B;;AAED,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBhB,WAAW,CAACc,CAAD,CAAnC;AACAX,EAAAA,QAAQ,CAACW,CAAD,CAAR,GAAcC,IAAd;AACAX,EAAAA,SAAS,CAACU,CAAD,CAAT,GAAeE,KAAf;AACH;;AACD,IAAIC,aAAa,GAAGb,SAAS,CAACc,GAAV,CAAcJ,CAAC,IAAGK,QAAQ,CAACL,CAAC,CAACM,KAAF,CAAQ,CAAR,CAAD,CAA1B,CAApB;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAEnB,QADE;AAEVoB,EAAAA,QAAQ,EAAE,CACN;AACIC,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,IAAI,EAAE,KAFV;AAGIC,IAAAA,WAAW,EAAE,CAHjB;AAIIC,IAAAA,eAAe,EAAE,oBAJrB;AAKIC,IAAAA,WAAW,EAAE,eALjB;AAMIC,IAAAA,WAAW,EAAE,CANjB;AAOIC,IAAAA,IAAI,EAAEb;AAPV,GADM;AAFA,CAAd;;AAgBA,MAAMc,KAAN,SAAoBjC,KAAK,CAACkC,SAA1B,CAAoC;AAChCC,EAAAA,MAAM,GAAG;AACLtB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKsB,KAAL,CAAWC,IAAvB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAGd,KADT;AAEE,MAAA,OAAO,EAAE;AACPe,QAAAA,KAAK,EAAC;AACJC,UAAAA,OAAO,EAAC,IADJ;AAEJC,UAAAA,IAAI,EAAE,sBAAsB,KAAKJ,KAAL,CAAWC,IAFnC;AAGJI,UAAAA,QAAQ,EAAC;AAHL,SADC;AAMPC,QAAAA,MAAM,EAAC;AACLH,UAAAA,OAAO,EAAC,IADH;AAELI,UAAAA,QAAQ,EAAC;AAFJ;AANA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADJ;AAkBH;;AArB+B;;AAwBpC,eAAeV,KAAf","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport flight_data from '../datasets/2020-06-17-TYO.json';\nimport storageRef,{ db } from './firebase';\nimport '../pages/pricechart'\n\nvar date_arr = [];\nvar price_arr = [];\n\ndb.collection('flight_price_KUL').doc(\"2020-06-21\")\n.collection('2020-05-22').get().then((querySnapshot) => {\n  querySnapshot.forEach((doc) => {\n    // Gets the name of the document and the price of the flight\n    console.log(`${doc.id} => ${doc.get(\"Price\")}`);\n  });\n});\n\nfor (var x = 0; x < 14; x++) {\n\n}\n\nfor (var x = 0; x < 14; x++) {\n    const { Date, Price } = flight_data[x];\n    date_arr[x] = Date;\n    price_arr[x] = Price;\n}\nvar price_int_arr = price_arr.map(x =>parseInt(x.slice(1)));\n\nconst state = { \n    labels: date_arr,\n    datasets: [\n        {\n            label: '$SGD',\n            fill: false,\n            lineTension: 0,\n            backgroundColor: 'rgba(75,192,192,1)',\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 5,\n            data: price_int_arr\n        }\n    ]\n};\n\n\nclass Chart extends React.Component {\n    render() { \n        console.log(this.props.name);\n        return (\n            <div>\n              <Line \n                data={ state }\n                options={{\n                  title:{\n                    display:true,\n                    text: \"Flight prices to \" + this.props.name,\n                    fontSize:20\n                  },\n                  legend:{\n                    display:true,\n                    position:'right'\n                  }\n                }}\n              />\n            </div>\n          );\n    }\n}\n \nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}