{"ast":null,"code":"var _jsxFileName = \"/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'react-chartjs-2';\nimport { db } from './firebase';\nimport '../pages/pricechart';\n\nfunction cityPicker(city) {\n  if (city === \"Tokyo\") {\n    return \"TYO\";\n  } else if (city === \"Bali\") {\n    return \"DPS\";\n  } else if (city === \"London\") {\n    return \"LON\";\n  } else if (city === \"Hong Kong\") {\n    return \"HKG\";\n  } else {\n    return \"KUL\";\n  }\n}\n\nfunction getNextMonth() {\n  var date = new Date(); //TO LEAVE IT AS 29\n\n  var nextMonth = date.getDate() + 29;\n  date.setDate(nextMonth);\n  var dateArr = date.toLocaleDateString().split(\"/\");\n  var year = dateArr[2];\n  var month = dateArr[1];\n  var day = dateArr[0];\n  var dateStr = year + \"-\" + month + \"-\" + day;\n  return dateStr;\n}\n\nfunction today() {\n  var date = new Date();\n  var today = date.getDate();\n  date.setDate(today);\n  var dateArr = date.toLocaleDateString().split(\"/\");\n  var year = dateArr[2];\n  var month = dateArr[1];\n  var day = dateArr[0];\n  var dateStr = year + \"-\" + month + \"-\" + day;\n  return dateStr;\n}\n\nfunction incrementDay(dateStr) {\n  var dateArr = dateStr.split(\"-\");\n  var date = new Date();\n  date.setFullYear(parseInt(dateArr[0]));\n  date.setMonth(parseInt(dateArr[1] - 1));\n  date.setDate(parseInt(dateArr[2]));\n  var nextDay = date.getDate() + 1;\n  date.setDate(nextDay);\n  var dateArr_ = date.toLocaleDateString().split(\"/\");\n  var year = dateArr_[2];\n  var month = dateArr_[1];\n  var day = dateArr_[0];\n  var outputStr = year + \"-\" + month + \"-\" + day;\n  return outputStr;\n}\n\nfunction dayBefore(dateStr) {\n  var dateArr = dateStr.split(\"-\");\n  var date = new Date();\n  date.setFullYear(parseInt(dateArr[0]));\n  date.setMonth(parseInt(dateArr[1] - 1));\n  date.setDate(parseInt(dateArr[2]));\n  var beforeDay = date.getDate() - 1;\n  date.setDate(beforeDay);\n  var dateArr_ = date.toLocaleDateString().split(\"/\");\n  var year = dateArr_[2];\n  var month = dateArr_[1];\n  var day = dateArr_[0];\n  var outputStr = year + \"-\" + month + \"-\" + day;\n  return outputStr;\n}\n\nasync function getFirebaseData(date_, city, date_arr) {\n  var price_arr = [];\n\n  for (var x = 0; x < 14; x++) {\n    date_arr[x] = date_;\n    const document = await db.collection('flight_price_' + city).doc(date_).collection(dayBefore(today())).doc('Data').get();\n    const price = await document.get(\"Price\");\n    price_arr[x] = parseInt(price.slice(1));\n    date_ = incrementDay(date_);\n  }\n\n  return price_arr;\n}\n\nclass Chart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      labels: [],\n      datasets: [{\n        label: '$SGD',\n        fill: false,\n        lineTension: 0,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 5,\n        data: []\n      }]\n    };\n  }\n\n  async componentDidMount() {\n    const city = cityPicker(this.props.name);\n    var date_arr = [];\n    var date_ = getNextMonth();\n    var final_prices = await getFirebaseData(date_, city, date_arr).catch(err => console.log(\"Oops error\"));\n\n    if (this.state.labels !== date_arr) {\n      this.setState({\n        labels: date_arr\n      });\n    }\n\n    if (this.state.datasets[0].data !== final_prices) {\n      this.setState({\n        datasets: [{\n          label: '$SGD',\n          fill: true,\n          lineTension: 0,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 1,\n          data: final_prices\n        }]\n      });\n    }\n\n    ;\n  }\n\n  render() {\n    console.log(this.state.datasets[0].data);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: this.state,\n      options: {\n        title: {\n          display: true,\n          text: \"Flight prices to \" + this.props.name,\n          fontSize: 30\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chart.jsx"],"names":["React","Line","db","cityPicker","city","getNextMonth","date","Date","nextMonth","getDate","setDate","dateArr","toLocaleDateString","split","year","month","day","dateStr","today","incrementDay","setFullYear","parseInt","setMonth","nextDay","dateArr_","outputStr","dayBefore","beforeDay","getFirebaseData","date_","date_arr","price_arr","x","document","collection","doc","get","price","slice","Chart","Component","constructor","state","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","componentDidMount","props","name","final_prices","catch","err","console","log","setState","render","title","display","text","fontSize","legend","position"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,iBAAP;AACA,SAASC,EAAT,QAAmB,YAAnB;AACA,OAAO,qBAAP;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB,WAAO,KAAP;AACD,GAFD,MAEO,IAAIA,IAAI,KAAK,MAAb,EAAqB;AAC1B,WAAO,KAAP;AACD,GAFM,MAEA,IAAIA,IAAI,KAAI,QAAZ,EAAsB;AAC3B,WAAO,KAAP;AACD,GAFM,MAEA,IAAIA,IAAI,KAAK,WAAb,EAA0B;AAC/B,WAAO,KAAP;AACD,GAFM,MAEA;AACL,WAAO,KAAP;AACD;AACF;;AAED,SAASC,YAAT,GAAwB;AACtB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX,CADsB,CAEtB;;AACA,MAAIC,SAAS,GAAGF,IAAI,CAACG,OAAL,KAAiB,EAAjC;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAaF,SAAb;AACA,MAAIG,OAAO,GAAGL,IAAI,CAACM,kBAAL,GAA0BC,KAA1B,CAAgC,GAAhC,CAAd;AACA,MAAIC,IAAI,GAAGH,OAAO,CAAC,CAAD,CAAlB;AACA,MAAII,KAAK,GAAGJ,OAAO,CAAC,CAAD,CAAnB;AACA,MAAIK,GAAG,GAAGL,OAAO,CAAC,CAAD,CAAjB;AACA,MAAIM,OAAO,GAAGH,IAAI,GAAG,GAAP,GAAaC,KAAb,GAAqB,GAArB,GAA2BC,GAAzC;AACA,SAAOC,OAAP;AACD;;AAED,SAASC,KAAT,GAAiB;AACf,MAAIZ,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,MAAIW,KAAK,GAAGZ,IAAI,CAACG,OAAL,EAAZ;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAaQ,KAAb;AACA,MAAIP,OAAO,GAAGL,IAAI,CAACM,kBAAL,GAA0BC,KAA1B,CAAgC,GAAhC,CAAd;AACA,MAAIC,IAAI,GAAGH,OAAO,CAAC,CAAD,CAAlB;AACA,MAAII,KAAK,GAAGJ,OAAO,CAAC,CAAD,CAAnB;AACA,MAAIK,GAAG,GAAGL,OAAO,CAAC,CAAD,CAAjB;AACA,MAAIM,OAAO,GAAGH,IAAI,GAAG,GAAP,GAAaC,KAAb,GAAqB,GAArB,GAA2BC,GAAzC;AACA,SAAOC,OAAP;AACD;;AAED,SAASE,YAAT,CAAsBF,OAAtB,EAA+B;AAC7B,MAAIN,OAAO,GAAGM,OAAO,CAACJ,KAAR,CAAc,GAAd,CAAd;AACA,MAAIP,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,EAAAA,IAAI,CAACc,WAAL,CAAiBC,QAAQ,CAACV,OAAO,CAAC,CAAD,CAAR,CAAzB;AACAL,EAAAA,IAAI,CAACgB,QAAL,CAAcD,QAAQ,CAACV,OAAO,CAAC,CAAD,CAAP,GAAa,CAAd,CAAtB;AACAL,EAAAA,IAAI,CAACI,OAAL,CAAaW,QAAQ,CAACV,OAAO,CAAC,CAAD,CAAR,CAArB;AACA,MAAIY,OAAO,GAAGjB,IAAI,CAACG,OAAL,KAAiB,CAA/B;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAaa,OAAb;AACA,MAAIC,QAAQ,GAAGlB,IAAI,CAACM,kBAAL,GAA0BC,KAA1B,CAAgC,GAAhC,CAAf;AACA,MAAIC,IAAI,GAAGU,QAAQ,CAAC,CAAD,CAAnB;AACA,MAAIT,KAAK,GAAGS,QAAQ,CAAC,CAAD,CAApB;AACA,MAAIR,GAAG,GAAGQ,QAAQ,CAAC,CAAD,CAAlB;AACA,MAAIC,SAAS,GAAGX,IAAI,GAAG,GAAP,GAAaC,KAAb,GAAqB,GAArB,GAA2BC,GAA3C;AACA,SAAOS,SAAP;AACD;;AAED,SAASC,SAAT,CAAmBT,OAAnB,EAA4B;AAC1B,MAAIN,OAAO,GAAGM,OAAO,CAACJ,KAAR,CAAc,GAAd,CAAd;AACA,MAAIP,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,EAAAA,IAAI,CAACc,WAAL,CAAiBC,QAAQ,CAACV,OAAO,CAAC,CAAD,CAAR,CAAzB;AACAL,EAAAA,IAAI,CAACgB,QAAL,CAAcD,QAAQ,CAACV,OAAO,CAAC,CAAD,CAAP,GAAa,CAAd,CAAtB;AACAL,EAAAA,IAAI,CAACI,OAAL,CAAaW,QAAQ,CAACV,OAAO,CAAC,CAAD,CAAR,CAArB;AACA,MAAIgB,SAAS,GAAGrB,IAAI,CAACG,OAAL,KAAiB,CAAjC;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAaiB,SAAb;AACA,MAAIH,QAAQ,GAAGlB,IAAI,CAACM,kBAAL,GAA0BC,KAA1B,CAAgC,GAAhC,CAAf;AACA,MAAIC,IAAI,GAAGU,QAAQ,CAAC,CAAD,CAAnB;AACA,MAAIT,KAAK,GAAGS,QAAQ,CAAC,CAAD,CAApB;AACA,MAAIR,GAAG,GAAGQ,QAAQ,CAAC,CAAD,CAAlB;AACA,MAAIC,SAAS,GAAGX,IAAI,GAAG,GAAP,GAAaC,KAAb,GAAqB,GAArB,GAA2BC,GAA3C;AACA,SAAOS,SAAP;AACD;;AAED,eAAeG,eAAf,CAA+BC,KAA/B,EAAsCzB,IAAtC,EAA4C0B,QAA5C,EAAsD;AACpD,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BF,IAAAA,QAAQ,CAACE,CAAD,CAAR,GAAcH,KAAd;AACA,UAAMI,QAAQ,GAAG,MAAM/B,EAAE,CAACgC,UAAH,CAAc,kBAAkB9B,IAAhC,EAAsC+B,GAAtC,CAA0CN,KAA1C,EACtBK,UADsB,CACXR,SAAS,CAACR,KAAK,EAAN,CADE,EACSiB,GADT,CACa,MADb,EACqBC,GADrB,EAAvB;AAEA,UAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACG,GAAT,CAAa,OAAb,CAApB;AACAL,IAAAA,SAAS,CAACC,CAAD,CAAT,GAAeX,QAAQ,CAACgB,KAAK,CAACC,KAAN,CAAY,CAAZ,CAAD,CAAvB;AACAT,IAAAA,KAAK,GAAGV,YAAY,CAACU,KAAD,CAApB;AACD;;AACD,SAAOE,SAAP;AACD;;AAED,MAAMQ,KAAN,SAAoBvC,KAAK,CAACwC,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,IAAI,EAAE,KAFV;AAGIC,QAAAA,WAAW,EAAE,CAHjB;AAIIC,QAAAA,eAAe,EAAE,oBAJrB;AAKIC,QAAAA,WAAW,EAAE,eALjB;AAMIC,QAAAA,WAAW,EAAE,CANjB;AAOIC,QAAAA,IAAI,EAAG;AAPX,OADM;AAFC,KAAb;AAcD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAMhD,IAAI,GAAGD,UAAU,CAAC,KAAKkD,KAAL,CAAWC,IAAZ,CAAvB;AACA,QAAIxB,QAAQ,GAAG,EAAf;AACA,QAAID,KAAK,GAAGxB,YAAY,EAAxB;AACA,QAAIkD,YAAY,GAAG,MAAM3B,eAAe,CAACC,KAAD,EAAQzB,IAAR,EAAc0B,QAAd,CAAf,CAAuC0B,KAAvC,CAA6CC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAApD,CAAzB;;AACA,QAAI,KAAKjB,KAAL,CAAWC,MAAX,KAAsBb,QAA1B,EAAoC;AAClC,WAAK8B,QAAL,CAAc;AAAEjB,QAAAA,MAAM,EAAEb;AAAV,OAAd;AACD;;AACD,QAAI,KAAKY,KAAL,CAAWE,QAAX,CAAoB,CAApB,EAAuBO,IAAvB,KAAgCI,YAApC,EAAkD;AAChD,WAAKK,QAAL,CAAc;AAAEhB,QAAAA,QAAQ,EACtB,CACE;AACIC,UAAAA,KAAK,EAAE,MADX;AAEIC,UAAAA,IAAI,EAAE,IAFV;AAGIC,UAAAA,WAAW,EAAE,CAHjB;AAIIC,UAAAA,eAAe,EAAE,oBAJrB;AAKIC,UAAAA,WAAW,EAAE,eALjB;AAMIC,UAAAA,WAAW,EAAE,CANjB;AAOIC,UAAAA,IAAI,EAAGI;AAPX,SADF;AADY,OAAd;AAaD;;AAAA;AACF;;AAEDM,EAAAA,MAAM,GAAG;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,QAAX,CAAoB,CAApB,EAAuBO,IAAnC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAG,KAAKT,KADd;AAEE,MAAA,OAAO,EAAE;AACPoB,QAAAA,KAAK,EAAC;AACJC,UAAAA,OAAO,EAAC,IADJ;AAEJC,UAAAA,IAAI,EAAE,sBAAsB,KAAKX,KAAL,CAAWC,IAFnC;AAGJW,UAAAA,QAAQ,EAAC;AAHL,SADC;AAMPC,QAAAA,MAAM,EAAC;AACLH,UAAAA,OAAO,EAAC,IADH;AAELI,UAAAA,QAAQ,EAAC;AAFJ;AANA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAkBD;;AAhE+B;;AAmEpC,eAAe5B,KAAf","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'react-chartjs-2';\nimport { db } from './firebase';\nimport '../pages/pricechart'\n\nfunction cityPicker(city) {\n  if (city === \"Tokyo\") {\n    return \"TYO\";\n  } else if (city === \"Bali\") {\n    return \"DPS\";\n  } else if (city=== \"London\") {\n    return \"LON\";\n  } else if (city === \"Hong Kong\") {\n    return \"HKG\";\n  } else {\n    return \"KUL\";\n  }\n}\n\nfunction getNextMonth() {\n  var date = new Date();\n  //TO LEAVE IT AS 29\n  var nextMonth = date.getDate() + 29;\n  date.setDate(nextMonth);\n  var dateArr = date.toLocaleDateString().split(\"/\");\n  var year = dateArr[2];\n  var month = dateArr[1];\n  var day = dateArr[0];\n  var dateStr = year + \"-\" + month + \"-\" + day;\n  return dateStr;\n}\n\nfunction today() {\n  var date = new Date();\n  var today = date.getDate();\n  date.setDate(today);\n  var dateArr = date.toLocaleDateString().split(\"/\");\n  var year = dateArr[2];\n  var month = dateArr[1];\n  var day = dateArr[0];\n  var dateStr = year + \"-\" + month + \"-\" + day;\n  return dateStr;\n}\n\nfunction incrementDay(dateStr) {\n  var dateArr = dateStr.split(\"-\");\n  var date = new Date();\n  date.setFullYear(parseInt(dateArr[0]));\n  date.setMonth(parseInt(dateArr[1] - 1));\n  date.setDate(parseInt(dateArr[2]));\n  var nextDay = date.getDate() + 1;\n  date.setDate(nextDay);\n  var dateArr_ = date.toLocaleDateString().split(\"/\");\n  var year = dateArr_[2];\n  var month = dateArr_[1];\n  var day = dateArr_[0];\n  var outputStr = year + \"-\" + month + \"-\" + day;\n  return outputStr;\n}\n\nfunction dayBefore(dateStr) {\n  var dateArr = dateStr.split(\"-\");\n  var date = new Date();\n  date.setFullYear(parseInt(dateArr[0]));\n  date.setMonth(parseInt(dateArr[1] - 1));\n  date.setDate(parseInt(dateArr[2]));\n  var beforeDay = date.getDate() - 1;\n  date.setDate(beforeDay);\n  var dateArr_ = date.toLocaleDateString().split(\"/\");\n  var year = dateArr_[2];\n  var month = dateArr_[1];\n  var day = dateArr_[0];\n  var outputStr = year + \"-\" + month + \"-\" + day;\n  return outputStr;\n}\n\nasync function getFirebaseData(date_, city, date_arr) {\n  var price_arr = [];\n  for (var x = 0; x < 14; x++) {\n    date_arr[x] = date_;\n    const document = await db.collection('flight_price_' + city).doc(date_)\n    .collection(dayBefore(today())).doc('Data').get();\n    const price = await document.get(\"Price\");\n    price_arr[x] = parseInt(price.slice(1));\n    date_ = incrementDay(date_);\n  }\n  return price_arr;\n}\n\nclass Chart extends React.Component {\n    constructor() {\n      super();\n      this.state = { \n        labels: [],\n        datasets: [\n            {\n                label: '$SGD',\n                fill: false,\n                lineTension: 0,\n                backgroundColor: 'rgba(75,192,192,1)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 5,\n                data : []\n            }\n        ]\n      };\n    }\n\n    async componentDidMount() {\n      const city = cityPicker(this.props.name);\n      var date_arr = [];\n      var date_ = getNextMonth();       \n      var final_prices = await getFirebaseData(date_, city, date_arr).catch(err => console.log(\"Oops error\"));\n      if (this.state.labels !== date_arr) {\n        this.setState({ labels: date_arr });\n      }\n      if (this.state.datasets[0].data !== final_prices) {\n        this.setState({ datasets: \n          [\n            {\n                label: '$SGD',\n                fill: true,\n                lineTension: 0,\n                backgroundColor: 'rgba(75,192,192,1)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 1,\n                data : final_prices\n            }\n          ]\n        })\n      };\n    }\n\n    render() {    \n      console.log(this.state.datasets[0].data);\n      return (\n        <div>\n          <Line \n            data={ this.state }\n            options={{\n              title:{\n                display:true,\n                text: \"Flight prices to \" + this.props.name,\n                fontSize:30\n              },\n              legend:{\n                display:true,\n                position:'right'\n              }\n            }}\n          />\n        </div>\n      );\n    }\n}\n \nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}