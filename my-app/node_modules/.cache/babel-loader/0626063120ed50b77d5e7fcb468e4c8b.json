{"ast":null,"code":"var _jsxFileName = \"/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chartdatacards.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport { db } from './firebase';\n\nfunction cityPicker(city) {\n  if (city === \"Tokyo\") {\n    return \"TYO\";\n  } else if (city === \"Bali\") {\n    return \"DPS\";\n  } else if (city === \"London\") {\n    return \"LON\";\n  } else if (city === \"Hong Kong\") {\n    return \"HKG\";\n  } else {\n    return \"KUL\";\n  }\n}\n\nfunction convert2dp(arr) {\n  var newArr = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    newArr.push(arr[i].toFixed(2));\n  }\n\n  return newArr;\n}\n\nasync function getFirebaseData(city) {\n  const document = await db.collection('flight_price_' + city).doc(\"Prices\").get();\n  const all_time_average = await document.get(\"All Time Average\");\n  const all_time_high = await document.get(\"All Time High\");\n  const all_time_low = await document.get(\"All Time Low\");\n  var output_arr = [];\n  output_arr[0] = convert2dp(all_time_average);\n  output_arr[1] = convert2dp(all_time_high);\n  output_arr[2] = convert2dp(all_time_low);\n  return output_arr;\n}\n\nclass OutlinedCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    const city = cityPicker(this.props.name);\n    var final_prices = await getFirebaseData(city).catch(err => console.log(\"Oops error\"));\n    this.setState({\n      datasets: [{\n        data: final_prices[0]\n      }, {\n        data: final_prices[1]\n      }, {\n        data: final_prices[2]\n      }]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      id: \"card\",\n      container: true,\n      spacing: 3,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Average Price: \", this.state[0]))), /*#__PURE__*/React.createElement(Card, {\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Highest Price: \", this.state[1]))), /*#__PURE__*/React.createElement(Card, {\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Lowest Price: \", this.state[2]))));\n  }\n\n}\n\nexport default OutlinedCard;","map":{"version":3,"sources":["/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chartdatacards.jsx"],"names":["React","makeStyles","Card","CardContent","Typography","Grid","db","cityPicker","city","convert2dp","arr","newArr","i","length","push","toFixed","getFirebaseData","document","collection","doc","get","all_time_average","all_time_high","all_time_low","output_arr","OutlinedCard","Component","constructor","state","data","componentDidMount","props","name","final_prices","catch","err","console","log","setState","datasets","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid} from '@material-ui/core'; \nimport { db } from './firebase';\n\nfunction cityPicker(city) {\n    if (city === \"Tokyo\") {\n      return \"TYO\";\n    } else if (city === \"Bali\") {\n      return \"DPS\";\n    } else if (city=== \"London\") {\n      return \"LON\";\n    } else if (city === \"Hong Kong\") {\n      return \"HKG\";\n    } else {\n      return \"KUL\";\n    }\n  }\n\nfunction convert2dp(arr){\n  var newArr = [];\n  for(let i=0; i<arr.length; i++){\n      newArr.push(arr[i].toFixed(2));\n  }\n  return newArr;\n}\n\nasync function getFirebaseData(city) {\n    const document = await db.collection('flight_price_' + city).doc(\"Prices\").get();\n    const all_time_average = await document.get(\"All Time Average\"); \n    const all_time_high = await document.get(\"All Time High\");\n    const all_time_low = await document.get(\"All Time Low\");\n    var output_arr = [];\n    output_arr[0]= convert2dp(all_time_average); \n    output_arr[1]= convert2dp(all_time_high); \n    output_arr[2]= convert2dp(all_time_low); \n    return output_arr;\n}\n\n class OutlinedCard extends React.Component {\n\n    constructor() { \n        super(); \n        this.state={ \n            data: [], \n        }; \n    }\n  \n  async componentDidMount() { \n    const city = cityPicker(this.props.name);\n    var final_prices = await getFirebaseData(city).catch(err => console.log(\"Oops error\"));\n    this.setState({ datasets: \n        [\n          {\n            data : final_prices[0]\n          },\n          {\n            data : final_prices[1]\n          }, \n          {\n            data : final_prices[2]\n          }\n        ]\n      })\n  }\n\n  render(){\n    \n    return (\n        \n        <Grid id =\"card\" container spacing={3} justify=\"center\">\n            <Card  variant=\"outlined\">\n                \n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                    Average Price: {this.state[0]} \n                    </Typography>\n                </CardContent>\n\n            </Card>\n            <Card  variant=\"outlined\">\n                \n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                    Highest Price: {this.state[1]} \n                    </Typography>\n                </CardContent>\n\n            </Card>\n            <Card  variant=\"outlined\">\n                \n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                    Lowest Price: {this.state[2]} \n                    </Typography>\n                </CardContent>\n\n            </Card>\n        </Grid>\n        );\n    } \n}\n\nexport default OutlinedCard; "]},"metadata":{},"sourceType":"module"}