{"ast":null,"code":"var _jsxFileName = \"/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport flight_data from '../datasets/2020-06-17-TYO.json';\nimport { db } from './firebase';\nimport '../pages/pricechart';\nvar date_arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nvar price_int_arr = [123, 453, 123, 233, 123, 231, 453, 123, 234, 234, 342, 134, 234, 234];\n\nfunction cityPicker(city) {\n  if (city === \"Tokyo\") {\n    return \"TYO\";\n  } else if (city === \"Bali\") {\n    return \"DPS\";\n  } else if (city === \"London\") {\n    return \"LON\";\n  } else if (city === \"Hong Kong\") {\n    return \"HKG\";\n  } else {\n    return \"KUL\";\n  }\n}\n\nfunction getNextMonth() {\n  var date = new Date(); //TO CHANGE TO 30\n\n  var nextMonth = date.getDate() + 29;\n  date.setDate(nextMonth);\n  var dateArr = date.toLocaleDateString().split(\"/\");\n  var year = dateArr[2];\n  var month = dateArr[1];\n  var day = dateArr[0];\n  var dateStr = year + \"-\" + month + \"-\" + day;\n  return dateStr;\n}\n\nfunction incrementDay(dateStr) {\n  var dateArr = dateStr.split(\"-\");\n  var date = new Date();\n  date.setFullYear(parseInt(dateArr[0]));\n  date.setMonth(parseInt(dateArr[1] - 1));\n  date.setDate(parseInt(dateArr[2]));\n  var nextDay = date.getDate() + 1;\n  date.setDate(nextDay);\n  var dateArr_ = date.toLocaleDateString().split(\"/\");\n  var year = dateArr_[2];\n  var month = dateArr_[1];\n  var day = dateArr_[0];\n  var outputStr = year + \"-\" + month + \"-\" + day;\n  return outputStr;\n}\n\nasync function getFirebaseData(date_, city, date_arr) {\n  var price_arr = [];\n\n  for (var x = 0; x < 14; x++) {\n    date_arr[x] = date_;\n    const document = await db.collection('flight_price_' + city).doc(date_).collection('2020-05-25').doc('Data').get();\n    const price = await document.get(\"Price\");\n    console.log(price);\n    price_arr[x] = parseInt(price.slice(1));\n    date_ = incrementDay(date_);\n  }\n\n  return price_arr;\n}\n\nclass Chart extends React.Component {\n  render() {\n    const city = cityPicker(this.props.name);\n    var date_arr = [];\n    var date_ = getNextMonth();\n    var final_prices = getFirebaseData(date_, city, date_arr);\n    console.log(\"done\");\n    const state = {\n      labels: date_arr,\n      datasets: [{\n        label: '$SGD',\n        fill: false,\n        lineTension: 0,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 5,\n        data: price_int_arr\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: state,\n      options: {\n        title: {\n          display: true,\n          text: \"Flight prices to \" + this.props.name,\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chart.jsx"],"names":["React","Line","flight_data","db","date_arr","price_int_arr","cityPicker","city","getNextMonth","date","Date","nextMonth","getDate","setDate","dateArr","toLocaleDateString","split","year","month","day","dateStr","incrementDay","setFullYear","parseInt","setMonth","nextDay","dateArr_","outputStr","getFirebaseData","date_","price_arr","x","document","collection","doc","get","price","console","log","slice","Chart","Component","render","props","name","final_prices","state","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport flight_data from '../datasets/2020-06-17-TYO.json';\nimport { db } from './firebase';\nimport '../pages/pricechart'\n\nvar date_arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14];\nvar price_int_arr = [123,453,123,233,123,231,453,123,234,234,342,134,234,234];\n\nfunction cityPicker(city) {\n  if (city === \"Tokyo\") {\n    return \"TYO\";\n  } else if (city === \"Bali\") {\n    return \"DPS\";\n  } else if (city=== \"London\") {\n    return \"LON\";\n  } else if (city === \"Hong Kong\") {\n    return \"HKG\";\n  } else {\n    return \"KUL\";\n  }\n}\n\nfunction getNextMonth() {\n  var date = new Date();\n  //TO CHANGE TO 30\n  var nextMonth = date.getDate() + 29;\n  date.setDate(nextMonth);\n  var dateArr = date.toLocaleDateString().split(\"/\");\n  var year = dateArr[2];\n  var month = dateArr[1];\n  var day = dateArr[0];\n  var dateStr = year + \"-\" + month + \"-\" + day;\n  return dateStr;\n}\n\nfunction incrementDay(dateStr) {\n  var dateArr = dateStr.split(\"-\");\n  var date = new Date();\n  date.setFullYear(parseInt(dateArr[0]));\n  date.setMonth(parseInt(dateArr[1] - 1));\n  date.setDate(parseInt(dateArr[2]));\n  var nextDay = date.getDate() + 1;\n  date.setDate(nextDay);\n  var dateArr_ = date.toLocaleDateString().split(\"/\");\n  var year = dateArr_[2];\n  var month = dateArr_[1];\n  var day = dateArr_[0];\n  var outputStr = year + \"-\" + month + \"-\" + day;\n  return outputStr;\n}\n\nasync function getFirebaseData(date_, city, date_arr) {\n  var price_arr = [];\n  for (var x = 0; x < 14; x++) {\n    date_arr[x] = date_;\n    const document = await db.collection('flight_price_' + city).doc(date_)\n    .collection('2020-05-25').doc('Data').get();\n    const price = await document.get(\"Price\");\n    console.log(price);\n    price_arr[x] = parseInt(price.slice(1));\n    date_ = incrementDay(date_);\n  }\n  return price_arr;\n}\n\nclass Chart extends React.Component {\n    render() { \n        const city = cityPicker(this.props.name);\n        var date_arr = [];\n        var date_ = getNextMonth();       \n        var final_prices = getFirebaseData(date_, city, date_arr);\n        console.log(\"done\");\n        \n        const state = { \n          labels: date_arr,\n          datasets: [\n              {\n                  label: '$SGD',\n                  fill: false,\n                  lineTension: 0,\n                  backgroundColor: 'rgba(75,192,192,1)',\n                  borderColor: 'rgba(0,0,0,1)',\n                  borderWidth: 5,\n                  data: price_int_arr\n              }\n          ]\n      };\n      \n      return (\n        <div>\n          <Line \n            data={ state }\n            options={{\n              title:{\n                display:true,\n                text: \"Flight prices to \" + this.props.name,\n                fontSize:20\n              },\n              legend:{\n                display:true,\n                position:'right'\n              }\n            }}\n          />\n        </div>\n      );\n    }\n}\n \nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}