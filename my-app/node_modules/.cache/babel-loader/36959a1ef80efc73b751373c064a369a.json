{"ast":null,"code":"var _jsxFileName = \"/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport flight_data from '../datasets/2020-06-17-TYO.json';\nimport { db } from './firebase';\nimport '../pages/pricechart';\nvar date_arr = [];\nvar price_arr = [];\n\nfor (var x = 0; x < 14; x++) {\n  const {\n    Date,\n    Price\n  } = flight_data[x];\n  date_arr[x] = Date;\n  price_arr[x] = Price;\n}\n\nvar price_int_arr = price_arr.map(x => parseInt(x.slice(1)));\n\nfunction cityPicker(city) {\n  if (city === \"Tokyo\") {\n    return \"TYO\";\n  } else if (city === \"Bali\") {\n    return \"DPS\";\n  } else if (city === \"London\") {\n    return \"LON\";\n  } else if (city === \"Hong Kong\") {\n    return \"HKG\";\n  } else {\n    return \"KUL\";\n  }\n}\n\nfunction getFourteenDaysAgo() {\n  var dateTwoWeeksAgo = new Date();\n  var pastDate = dateTwoWeeksAgo.getDate() - 14;\n  dateTwoWeeksAgo.setDate(pastDate);\n  var dateStr = dateTwoWeeksAgo.getFullYear() + \"-\" + dateTwoWeeksAgo.getMonth() + \"-\" + dateTwoWeeksAgo.getDay();\n  console.log(dateTwoWeeksAgo.getDate());\n  console.log(dateStr);\n  return dateStr;\n}\n\nfunction incrementDay(dateStr) {\n  var year = dateStr.substring(0, 4);\n  var month = dateStr.substring(5, 7);\n  var day = dateStr.substring(8, 10);\n  var date = new Date();\n  date.setFullYear(parseInt(year));\n  date.setMonth(parseInt(month));\n  date.setDate(parseInt(day));\n  var outputStr = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDay();\n  console.log(date);\n  console.log(outputStr);\n}\n\nconst state = {\n  labels: date_arr,\n  datasets: [{\n    label: '$SGD',\n    fill: false,\n    lineTension: 0,\n    backgroundColor: 'rgba(75,192,192,1)',\n    borderColor: 'rgba(0,0,0,1)',\n    borderWidth: 5,\n    data: price_int_arr\n  }]\n};\n\nclass Chart extends React.Component {\n  render() {\n    const city = cityPicker(this.props.name);\n    db.collection('flight_price_' + city).doc(\"2020-06-21\").collection('2020-05-22').get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        // Gets the name of the document and the price of the flight\n        console.log(`${doc.id} => ${doc.get(\"Price\")}`);\n      });\n    });\n    const lol = getFourteenDaysAgo();\n    incrementDay(lol);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: state,\n      options: {\n        title: {\n          display: true,\n          text: \"Flight prices to \" + this.props.name,\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chart.jsx"],"names":["React","Line","flight_data","db","date_arr","price_arr","x","Date","Price","price_int_arr","map","parseInt","slice","cityPicker","city","getFourteenDaysAgo","dateTwoWeeksAgo","pastDate","getDate","setDate","dateStr","getFullYear","getMonth","getDay","console","log","incrementDay","year","substring","month","day","date","setFullYear","setMonth","outputStr","state","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","Chart","Component","render","props","name","collection","doc","get","then","querySnapshot","forEach","id","lol","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport flight_data from '../datasets/2020-06-17-TYO.json';\nimport { db } from './firebase';\nimport '../pages/pricechart'\n\nvar date_arr = [];\nvar price_arr = [];\n\nfor (var x = 0; x < 14; x++) {\n    const { Date, Price } = flight_data[x];\n    date_arr[x] = Date;\n    price_arr[x] = Price;\n}\nvar price_int_arr = price_arr.map(x =>parseInt(x.slice(1)));\n\nfunction cityPicker(city) {\n  if (city === \"Tokyo\") {\n    return \"TYO\";\n  } else if (city === \"Bali\") {\n    return \"DPS\";\n  } else if (city=== \"London\") {\n    return \"LON\";\n  } else if (city === \"Hong Kong\") {\n    return \"HKG\";\n  } else {\n    return \"KUL\";\n  }\n}\n\nfunction getFourteenDaysAgo() {\n  var dateTwoWeeksAgo = new Date();\n  var pastDate = dateTwoWeeksAgo.getDate() - 14;\n  dateTwoWeeksAgo.setDate(pastDate);\n  var dateStr = dateTwoWeeksAgo.getFullYear() + \"-\" + dateTwoWeeksAgo.getMonth() + \"-\" + dateTwoWeeksAgo.getDay();\n  console.log(dateTwoWeeksAgo.getDate())\n  console.log(dateStr);\n  return dateStr;\n}\n\nfunction incrementDay(dateStr) {\n  var year = dateStr.substring(0,4);\n  var month = dateStr.substring(5,7);\n  var day = dateStr.substring(8,10);\n  var date = new Date();\n  date.setFullYear(parseInt(year));\n  date.setMonth(parseInt(month));\n  date.setDate(parseInt(day));\n  var outputStr = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDay();\n  console.log(date);\n  console.log(outputStr);\n}\n\nconst state = { \n    labels: date_arr,\n    datasets: [\n        {\n            label: '$SGD',\n            fill: false,\n            lineTension: 0,\n            backgroundColor: 'rgba(75,192,192,1)',\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 5,\n            data: price_int_arr\n        }\n    ]\n};\n\nclass Chart extends React.Component {\n    render() { \n        const city = cityPicker(this.props.name);\n        db.collection('flight_price_' + city).doc(\"2020-06-21\")\n          .collection('2020-05-22').get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n              // Gets the name of the document and the price of the flight\n              console.log(`${doc.id} => ${doc.get(\"Price\")}`);\n            });\n          });\n        const lol = getFourteenDaysAgo();\n        incrementDay(lol);\n        return (\n            <div>\n              <Line \n                data={ state }\n                options={{\n                  title:{\n                    display:true,\n                    text: \"Flight prices to \" + this.props.name,\n                    fontSize:20\n                  },\n                  legend:{\n                    display:true,\n                    position:'right'\n                  }\n                }}\n              />\n            </div>\n          );\n    }\n}\n \nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}