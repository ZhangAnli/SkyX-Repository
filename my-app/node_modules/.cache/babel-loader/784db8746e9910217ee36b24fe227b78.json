{"ast":null,"code":"var _jsxFileName = \"/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chartdatacards.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport { db } from './firebase';\n\nfunction cityPicker(city) {\n  if (city === \"Tokyo\") {\n    return \"TYO\";\n  } else if (city === \"Bali\") {\n    return \"DPS\";\n  } else if (city === \"London\") {\n    return \"LON\";\n  } else if (city === \"Hong Kong\") {\n    return \"HKG\";\n  } else {\n    return \"KUL\";\n  }\n}\n\nasync function getFirebaseData(city) {\n  const document = await db.collection('flight_price_' + city).doc(\"Prices\").get();\n  const all_time_average = await document.get(\"All Time Average\");\n  console.log(all_time_average1);\n  const all_time_high = await document.get(\"All Time High\");\n  console.log(all_time_high);\n  const all_time_low = await document.get(\"All Time Low\");\n  var output_arr = [];\n  output_arr[0] = all_time_average.toFixed(2);\n  output_arr[1] = all_time_high;\n  output_arr[2] = all_time_low;\n  console.log(output_arr);\n  return output_arr;\n}\n\nclass OutlinedCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      all_time_average: 0,\n      all_time_high: 0,\n      all_time_low: 0\n    };\n  }\n\n  async componentDidMount() {\n    const city = cityPicker(this.props.name);\n    var all_time_prices = await getFirebaseData(city).catch(err => console.log(\"Oops error\"));\n    console.log(all_time_prices);\n    this.setState({\n      //update of state \n      all_time_average: all_time_prices[0],\n      all_time_high: all_time_prices[1],\n      all_time_low: all_time_prices[2]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      id: \"card\",\n      container: true,\n      spacing: 3,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Average Price: \", this.state.all_time_average))), /*#__PURE__*/React.createElement(Card, {\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Highest Price: \", this.state.all_time_high))), /*#__PURE__*/React.createElement(Card, {\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"Lowest Price: \", this.state.all_time_low))));\n  }\n\n}\n\nexport default OutlinedCard;","map":{"version":3,"sources":["/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chartdatacards.jsx"],"names":["React","makeStyles","Card","CardContent","Typography","Grid","db","cityPicker","city","getFirebaseData","document","collection","doc","get","all_time_average","console","log","all_time_average1","all_time_high","all_time_low","output_arr","toFixed","OutlinedCard","Component","constructor","state","componentDidMount","props","name","all_time_prices","catch","err","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid} from '@material-ui/core'; \nimport { db } from './firebase';\n\nfunction cityPicker(city) {\n    if (city === \"Tokyo\") {\n      return \"TYO\";\n    } else if (city === \"Bali\") {\n      return \"DPS\";\n    } else if (city=== \"London\") {\n      return \"LON\";\n    } else if (city === \"Hong Kong\") {\n      return \"HKG\";\n    } else {\n      return \"KUL\";\n    }\n  }\n\nasync function getFirebaseData(city) {\n    const document = await db.collection('flight_price_' + city).doc(\"Prices\").get();\n    const all_time_average = await document.get(\"All Time Average\"); \n    console.log(all_time_average1); \n    const all_time_high = await document.get(\"All Time High\");\n    console.log(all_time_high); \n    const all_time_low = await document.get(\"All Time Low\");\n    var output_arr = [];\n    output_arr[0]= all_time_average.toFixed(2);\n    output_arr[1]= all_time_high; \n    output_arr[2]= all_time_low; \n    console.log(output_arr); \n    return output_arr;\n    \n}\n\n class OutlinedCard extends React.Component {\n\n    constructor() { \n        super(); \n        this.state={ \n            all_time_average:0, \n            all_time_high: 0, \n            all_time_low: 0  \n        }; \n    }\n  \n  async componentDidMount() { \n    const city = cityPicker(this.props.name);\n    var all_time_prices = await getFirebaseData(city).catch(err => console.log(\"Oops error\"));\n    console.log(all_time_prices); \n    this.setState({ //update of state \n        all_time_average: all_time_prices[0], \n        all_time_high: all_time_prices[1], \n        all_time_low: all_time_prices[2], \n        \n      })\n  }\n\n  render(){\n    \n    return (\n        \n        <Grid id =\"card\" container spacing={3} justify=\"center\">\n            <Card  variant=\"outlined\">\n                \n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                    Average Price: { this.state.all_time_average }\n                    </Typography>\n                </CardContent>\n\n            </Card>\n            <Card  variant=\"outlined\">\n                \n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                    Highest Price: { this.state.all_time_high }\n                    </Typography>\n                </CardContent>\n\n            </Card>\n            <Card  variant=\"outlined\">\n                \n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                    Lowest Price: { this.state.all_time_low }\n                    </Typography>\n                </CardContent>\n\n            </Card>\n        </Grid>\n        );\n    } \n}\n\nexport default OutlinedCard; "]},"metadata":{},"sourceType":"module"}