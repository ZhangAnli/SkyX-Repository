{"ast":null,"code":"var _jsxFileName = \"/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport flight_data from '../datasets/2020-06-17-TYO.json';\nimport { db } from './firebase';\nimport '../pages/pricechart';\nvar date_arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]; // var price_arr = [];\n// var date_ = getNextMonth();\n\nvar price_int_arr = [123, 453, 123, 233, 123, 231, 453, 123, 234, 234, 342, 134, 234, 234];\nconsole.log(date_arr); // var price_int_arr = price_arr.map(x =>parseInt(x.slice(1)));\n\nfunction cityPicker(city) {\n  if (city === \"Tokyo\") {\n    return \"TYO\";\n  } else if (city === \"Bali\") {\n    return \"DPS\";\n  } else if (city === \"London\") {\n    return \"LON\";\n  } else if (city === \"Hong Kong\") {\n    return \"HKG\";\n  } else {\n    return \"KUL\";\n  }\n}\n\nfunction getNextMonth() {\n  var date = new Date(); //TO CHANGE TO 30\n\n  var nextMonth = date.getDate() + 29;\n  date.setDate(nextMonth);\n  var dateArr = date.toLocaleDateString().split(\"/\");\n  var year = dateArr[2];\n  var month = dateArr[1];\n  var day = dateArr[0];\n  var dateStr = year + \"-\" + month + \"-\" + day;\n  return dateStr;\n}\n\nfunction incrementDay(dateStr) {\n  var dateArr = dateStr.split(\"-\");\n  var date = new Date();\n  date.setFullYear(parseInt(dateArr[0]));\n  date.setMonth(parseInt(dateArr[1] - 1));\n  date.setDate(parseInt(dateArr[2]));\n  var nextDay = date.getDate() + 1;\n  date.setDate(nextDay);\n  var dateArr_ = date.toLocaleDateString().split(\"/\");\n  var year = dateArr_[2];\n  var month = dateArr_[1];\n  var day = dateArr_[0];\n  var outputStr = year + \"-\" + month + \"-\" + day;\n  return outputStr;\n}\n\nconst state = {\n  labels: date_arr,\n  datasets: [{\n    label: '$SGD',\n    fill: false,\n    lineTension: 0,\n    backgroundColor: 'rgba(75,192,192,1)',\n    borderColor: 'rgba(0,0,0,1)',\n    borderWidth: 5,\n    data: price_int_arr\n  }]\n};\n\nclass Chart extends React.Component {\n  render() {\n    const city = cityPicker(this.props.name);\n    var date_arr = [];\n    var price_arr = [];\n    var date_ = getNextMonth();\n\n    for (var x = 0; x < 14; x++) {\n      date_arr[x] = date_;\n      db.collection('flight_price_' + city).doc(date_).collection('2020-05-25').get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          // Gets the name of the document and the price of the flight\n          console.log(x);\n          console.log(`${doc.get(\"Price\")}`);\n        });\n      });\n      date_ = incrementDay(date_);\n    }\n\n    console.log(price_arr);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: state,\n      options: {\n        title: {\n          display: true,\n          text: \"Flight prices to \" + this.props.name,\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/tanzhuoyao/GitHub/SkyX/my-app/src/components/chart.jsx"],"names":["React","Line","flight_data","db","date_arr","price_int_arr","console","log","cityPicker","city","getNextMonth","date","Date","nextMonth","getDate","setDate","dateArr","toLocaleDateString","split","year","month","day","dateStr","incrementDay","setFullYear","parseInt","setMonth","nextDay","dateArr_","outputStr","state","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","Chart","Component","render","props","name","price_arr","date_","x","collection","doc","get","then","querySnapshot","forEach","title","display","text","fontSize","legend","position"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,EAAT,QAAmB,YAAnB;AACA,OAAO,qBAAP;AAEA,IAAIC,QAAQ,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,EAA5B,EAA+B,EAA/B,CAAf,C,CACA;AACA;;AACA,IAAIC,aAAa,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,CAApB;AAGAC,OAAO,CAACC,GAAR,CAAYH,QAAZ,E,CACA;;AAEA,SAASI,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB,WAAO,KAAP;AACD,GAFD,MAEO,IAAIA,IAAI,KAAK,MAAb,EAAqB;AAC1B,WAAO,KAAP;AACD,GAFM,MAEA,IAAIA,IAAI,KAAI,QAAZ,EAAsB;AAC3B,WAAO,KAAP;AACD,GAFM,MAEA,IAAIA,IAAI,KAAK,WAAb,EAA0B;AAC/B,WAAO,KAAP;AACD,GAFM,MAEA;AACL,WAAO,KAAP;AACD;AACF;;AAED,SAASC,YAAT,GAAwB;AACtB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX,CADsB,CAEtB;;AACA,MAAIC,SAAS,GAAGF,IAAI,CAACG,OAAL,KAAiB,EAAjC;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAaF,SAAb;AACA,MAAIG,OAAO,GAAGL,IAAI,CAACM,kBAAL,GAA0BC,KAA1B,CAAgC,GAAhC,CAAd;AACA,MAAIC,IAAI,GAAGH,OAAO,CAAC,CAAD,CAAlB;AACA,MAAII,KAAK,GAAGJ,OAAO,CAAC,CAAD,CAAnB;AACA,MAAIK,GAAG,GAAGL,OAAO,CAAC,CAAD,CAAjB;AACA,MAAIM,OAAO,GAAGH,IAAI,GAAG,GAAP,GAAaC,KAAb,GAAqB,GAArB,GAA2BC,GAAzC;AACA,SAAOC,OAAP;AACD;;AAED,SAASC,YAAT,CAAsBD,OAAtB,EAA+B;AAC7B,MAAIN,OAAO,GAAGM,OAAO,CAACJ,KAAR,CAAc,GAAd,CAAd;AACA,MAAIP,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,EAAAA,IAAI,CAACa,WAAL,CAAiBC,QAAQ,CAACT,OAAO,CAAC,CAAD,CAAR,CAAzB;AACAL,EAAAA,IAAI,CAACe,QAAL,CAAcD,QAAQ,CAACT,OAAO,CAAC,CAAD,CAAP,GAAa,CAAd,CAAtB;AACAL,EAAAA,IAAI,CAACI,OAAL,CAAaU,QAAQ,CAACT,OAAO,CAAC,CAAD,CAAR,CAArB;AACA,MAAIW,OAAO,GAAGhB,IAAI,CAACG,OAAL,KAAiB,CAA/B;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAaY,OAAb;AACA,MAAIC,QAAQ,GAAGjB,IAAI,CAACM,kBAAL,GAA0BC,KAA1B,CAAgC,GAAhC,CAAf;AACA,MAAIC,IAAI,GAAGS,QAAQ,CAAC,CAAD,CAAnB;AACA,MAAIR,KAAK,GAAGQ,QAAQ,CAAC,CAAD,CAApB;AACA,MAAIP,GAAG,GAAGO,QAAQ,CAAC,CAAD,CAAlB;AACA,MAAIC,SAAS,GAAGV,IAAI,GAAG,GAAP,GAAaC,KAAb,GAAqB,GAArB,GAA2BC,GAA3C;AACA,SAAOQ,SAAP;AACD;;AAED,MAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE3B,QADE;AAEV4B,EAAAA,QAAQ,EAAE,CACN;AACIC,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,IAAI,EAAE,KAFV;AAGIC,IAAAA,WAAW,EAAE,CAHjB;AAIIC,IAAAA,eAAe,EAAE,oBAJrB;AAKIC,IAAAA,WAAW,EAAE,eALjB;AAMIC,IAAAA,WAAW,EAAE,CANjB;AAOIC,IAAAA,IAAI,EAAElC;AAPV,GADM;AAFA,CAAd;;AAeA,MAAMmC,KAAN,SAAoBxC,KAAK,CAACyC,SAA1B,CAAoC;AAChCC,EAAAA,MAAM,GAAG;AACL,UAAMjC,IAAI,GAAGD,UAAU,CAAC,KAAKmC,KAAL,CAAWC,IAAZ,CAAvB;AACA,QAAIxC,QAAQ,GAAG,EAAf;AACA,QAAIyC,SAAS,GAAG,EAAhB;AACA,QAAIC,KAAK,GAAGpC,YAAY,EAAxB;;AACA,SAAK,IAAIqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B3C,MAAAA,QAAQ,CAAC2C,CAAD,CAAR,GAAcD,KAAd;AACA3C,MAAAA,EAAE,CAAC6C,UAAH,CAAc,kBAAkBvC,IAAhC,EAAsCwC,GAAtC,CAA0CH,KAA1C,EACCE,UADD,CACY,YADZ,EAC0BE,GAD1B,GACgCC,IADhC,CACsCC,aAAD,IAAmB;AACtDA,QAAAA,aAAa,CAACC,OAAd,CAAuBJ,GAAD,IAAS;AAC7B;AACA3C,UAAAA,OAAO,CAACC,GAAR,CAAYwC,CAAZ;AACAzC,UAAAA,OAAO,CAACC,GAAR,CAAa,GAAE0C,GAAG,CAACC,GAAJ,CAAQ,OAAR,CAAiB,EAAhC;AACD,SAJD;AAKD,OAPD;AAQAJ,MAAAA,KAAK,GAAGvB,YAAY,CAACuB,KAAD,CAApB;AACD;;AACDxC,IAAAA,OAAO,CAACC,GAAR,CAAYsC,SAAZ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAGf,KADT;AAEE,MAAA,OAAO,EAAE;AACPwB,QAAAA,KAAK,EAAC;AACJC,UAAAA,OAAO,EAAC,IADJ;AAEJC,UAAAA,IAAI,EAAE,sBAAsB,KAAKb,KAAL,CAAWC,IAFnC;AAGJa,UAAAA,QAAQ,EAAC;AAHL,SADC;AAMPC,QAAAA,MAAM,EAAC;AACLH,UAAAA,OAAO,EAAC,IADH;AAELI,UAAAA,QAAQ,EAAC;AAFJ;AANA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADJ;AAkBH;;AArC+B;;AAwCpC,eAAenB,KAAf","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport flight_data from '../datasets/2020-06-17-TYO.json';\nimport { db } from './firebase';\nimport '../pages/pricechart'\n\nvar date_arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14];\n// var price_arr = [];\n// var date_ = getNextMonth();\nvar price_int_arr = [123,453,123,233,123,231,453,123,234,234,342,134,234,234];\n\n\nconsole.log(date_arr);\n// var price_int_arr = price_arr.map(x =>parseInt(x.slice(1)));\n\nfunction cityPicker(city) {\n  if (city === \"Tokyo\") {\n    return \"TYO\";\n  } else if (city === \"Bali\") {\n    return \"DPS\";\n  } else if (city=== \"London\") {\n    return \"LON\";\n  } else if (city === \"Hong Kong\") {\n    return \"HKG\";\n  } else {\n    return \"KUL\";\n  }\n}\n\nfunction getNextMonth() {\n  var date = new Date();\n  //TO CHANGE TO 30\n  var nextMonth = date.getDate() + 29;\n  date.setDate(nextMonth);\n  var dateArr = date.toLocaleDateString().split(\"/\");\n  var year = dateArr[2];\n  var month = dateArr[1];\n  var day = dateArr[0];\n  var dateStr = year + \"-\" + month + \"-\" + day;\n  return dateStr;\n}\n\nfunction incrementDay(dateStr) {\n  var dateArr = dateStr.split(\"-\");\n  var date = new Date();\n  date.setFullYear(parseInt(dateArr[0]));\n  date.setMonth(parseInt(dateArr[1] - 1));\n  date.setDate(parseInt(dateArr[2]));\n  var nextDay = date.getDate() + 1;\n  date.setDate(nextDay);\n  var dateArr_ = date.toLocaleDateString().split(\"/\");\n  var year = dateArr_[2];\n  var month = dateArr_[1];\n  var day = dateArr_[0];\n  var outputStr = year + \"-\" + month + \"-\" + day;\n  return outputStr;\n}\n\nconst state = { \n    labels: date_arr,\n    datasets: [\n        {\n            label: '$SGD',\n            fill: false,\n            lineTension: 0,\n            backgroundColor: 'rgba(75,192,192,1)',\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 5,\n            data: price_int_arr\n        }\n    ]\n};\n\nclass Chart extends React.Component {\n    render() { \n        const city = cityPicker(this.props.name);\n        var date_arr = [];\n        var price_arr = [];\n        var date_ = getNextMonth();\n        for (var x = 0; x < 14; x++) {\n          date_arr[x] = date_;\n          db.collection('flight_price_' + city).doc(date_)\n          .collection('2020-05-25').get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n              // Gets the name of the document and the price of the flight\n              console.log(x);\n              console.log(`${doc.get(\"Price\")}`);\n            });\n          });\n          date_ = incrementDay(date_);\n        }\n        console.log(price_arr);\n        return (\n            <div>\n              <Line \n                data={ state }\n                options={{\n                  title:{\n                    display:true,\n                    text: \"Flight prices to \" + this.props.name,\n                    fontSize:20\n                  },\n                  legend:{\n                    display:true,\n                    position:'right'\n                  }\n                }}\n              />\n            </div>\n          );\n    }\n}\n \nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}